[project]
name = "pyperscan"
authors = [
    {name = "László Vaskó", email = "1771332+vlaci@users.noreply.github.com"},
]
dependencies = []
requires-python = ">=3.8"
dynamic = [
    'description',
    'license',
    'readme',
    'version'
]

[project.urls]
repository = "https://github.com/vlaci/pyperscan"

[build-system]
requires = ["maturin>=0.14,<0.15"]
build-backend = "maturin"

[tool.pdm.scripts]
venv = "pdm sync -d"
mypy = "mypy ."
ruff = "ruff ."
pytest = "python -m pytest tests"
clippy = "cargo clippy --all-targets -- --deny warnings"
all = { composite = ["clippy", "venv", "ruff", "mypy", "pytest"] }

[tool.pdm.dev-dependencies]
dev = [
    "black      ~= 23.3",
    "mypy       ~= 1.2",
    "pre-commit ~= 3.3",
    "ruff       ~= 0.0.264",
    #"towncrier  ~= 22.12.0",
]
test = [
  "pytest ~= 7.0.0",
]

[tool.ruff]
target-version = "py38"

select = [
  "A",      # flake8-builtins
  "ARG",    # flake8-unused-arguments
  "B",      # flake8-bugbear
  "C90",    # mccabe
  "C4",     # flake8-comprehensions
  "COM818", # flake8-commas; trailing-comma-on-bare-tuple
  "D",      # pydocstyle
  "E",      # pycodestyle (errors)
  "F",      # pyflakes
  "FBT",    # flake8-boolean-trap
  "G",      # flake8-logging-format
  "I",      # isort
  "ISC",    # flake8-implicit-str-concats
  "N",      # pep8-naming
  "PIE",    # flake8-pie
  "PYI",    # flake8-pyi
  "PL",     # pylint
  "PT",     # flake8-pytest-style
  "PTH",    # flake8-use-pathlib
  "RET",    # flake8-return
  "RUF",    # ruff's own lints
  "RSE",    # flake8-raise
  "S",      # flake8-bandit
  "SIM",    # flake8-simplify
  "SLF",    # flake8-self
  "T10",    # flake8-debugger
  "T20",    # flake8-print
  "TCH",    # flake8-type-checking
  "TRY",    # tryceratops
  "UP",     # pyupgrade
  "W",      # pycodestyle (warnings)
]

ignore = [
  "D1",      # undocumented-*:                 Native extension docstrings are not picked up
  "D203",    # one-blank-line-before-class:    D211 (no-blank-line-before-class) is used instead
  "D213",    # multi-line-summary-second-line: D212 (multi-line-summary-first-line) is used instead
  "E501",    # line-too-long:                  Let black handle line length violations
]

exclude = [
    "hyperscan-sys/hyperscan",
    "hyperscan-sys/vectorscan",
]

[tool.ruff.per-file-ignores]
"tests/*" = [
  "S101",    # assert:                         Enable usage of asserts
]

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "csv"
