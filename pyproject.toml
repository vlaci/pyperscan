[project]
name = "pyperscan"
version = "0.3.0"
dynamic = [
    'author',
    'description',
    'license',
    'readme',
]
requires-python = ">=3.9"

dependencies = []

[dependency-groups]
dev = [
    "mypy       ~= 1.7",
    "pre-commit ~= 3.5",
    "ruff       ~= 0.9.6",
    "towncrier  ~= 23.11.0",
]
test = [
  "pytest ~= 7.4",
]
docs = [
    "mkdocs               ~= 1.5",
    "mkdocstrings[python] ~= 0.24.0",
    "mkdocs-material      ~= 9.5",
]

[project.urls]
Homepage = "https://vlaci.github.io/pyperscan"
Repository = "https://github.com/vlaci/pyperscan"
Changelog = "https://github.com/vlaci/pyperscan/blob/main/CHANGELOG.md"

[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[tool.maturin]
include = ["CHANGELOG.md"]
python-source = "python"
module-name = "pyperscan._pyperscan"

[tool.towncrier]
directory = "changelog.d"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
underlines = ["", "", ""]
template = "changelog.d/changelog_template.jinja"
title_format = "## [{version}](https://github.com/vlaci/pyperscan/tree/{version}) - {project_date}"
issue_format = "[#{issue}](https://github.com/vlaci/pyperscan/issues/{issue})"

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true

[tool.ruff]
target-version = "py39"

exclude = [
  "hyperscan-sys/hyperscan",
  "hyperscan-sys/vectorscan",
  "tests/examples",
]

[tool.ruff.lint]
select = [
  "A",      # flake8-builtins
  "ARG",    # flake8-unused-arguments
  "B",      # flake8-bugbear
  "C90",    # mccabe
  "C4",     # flake8-comprehensions
  "COM818", # flake8-commas; trailing-comma-on-bare-tuple
  "D",      # pydocstyle
  "E",      # pycodestyle (errors)
  "F",      # pyflakes
  "FBT",    # flake8-boolean-trap
  "G",      # flake8-logging-format
  "I",      # isort
  "ISC",    # flake8-implicit-str-concats
  "N",      # pep8-naming
  "PIE",    # flake8-pie
  "PYI",    # flake8-pyi
  "PL",     # pylint
  "PT",     # flake8-pytest-style
  "PTH",    # flake8-use-pathlib
  "RET",    # flake8-return
  "RUF",    # ruff's own lints
  "RSE",    # flake8-raise
  "S",      # flake8-bandit
  "SIM",    # flake8-simplify
  "SLF",    # flake8-self
  "T10",    # flake8-debugger
  "T20",    # flake8-print
  "TCH",    # flake8-type-checking
  "TRY",    # tryceratops
  "UP",     # pyupgrade
  "W",      # pycodestyle (warnings)
]

ignore = [
  "D1",      # undocumented-*:                            Native extension docstrings are not picked up
  "D203",    # one-blank-line-before-class:               D211 (no-blank-line-before-class) is used instead
  "D213",    # multi-line-summary-second-line:            D212 (multi-line-summary-first-line) is used instead
  "E501",    # line-too-long:                             Let black handle line length violations
  "ISC001",  # single-line-implicit-string-concatenation: Taken care by ruff format
  "PYI021",  # docstring-in-stub:                         Extension module docstrings are in pyi files for mkdocs
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "S101",    # assert:                         Enable usage of asserts
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "csv"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
exclude = [
    "^hyperscan-sys/hyperscan/.*",
    "^hyperscan-sys/vectorscan/.*",
]
